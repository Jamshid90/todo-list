basePath: /v1
definitions:
  models.AddTaskRequest:
    properties:
      description:
        type: string
      priority:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  models.AddTaskResponse:
    properties:
      task:
        $ref: '#/definitions/models.Task'
    type: object
  models.GetTaskResponse:
    properties:
      task:
        $ref: '#/definitions/models.Task'
    type: object
  models.ListTaskResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/models.Task'
        type: array
    type: object
  models.ResponseError:
    properties:
      code:
        type: string
      message:
        type: string
      status:
        type: integer
    type: object
  models.Task:
    properties:
      created_at:
        type: string
      description:
        type: string
      priority:
        type: string
      status:
        type: string
      title:
        type: string
      update_at:
        type: string
      uuid:
        type: string
    type: object
info:
  contact: {}
  title: To Do List API
  version: "1.0"
paths:
  /task:
    get:
      consumes:
      - application/json
      description: Task list
      parameters:
      - default: 10
        description: limit
        in: query
        name: limit
        type: integer
      - default: 0
        description: offset
        in: query
        name: offset
        type: integer
      - default: new
        description: status
        enum:
        - new
        - in_progress
        - done
        in: query
        name: status
        type: string
      - default: high
        description: priority
        enum:
        - urgent
        - high
        - normal
        - low
        in: query
        name: priority
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListTaskResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: List
      tags:
      - task
    post:
      consumes:
      - application/json
      description: Task
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.AddTaskRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AddTaskResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Add
      tags:
      - task
  /task/{task_id}:
    get:
      consumes:
      - application/json
      description: Get task by task_id
      parameters:
      - description: task_id
        in: path
        name: task_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetTaskResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get
      tags:
      - task
swagger: "2.0"
